m3u8加解密流程
1. 整体加解密流程
m3u8加解密参考文档：https://help.aliyun.com/zh/cdn/user-guide/m3u8-encryption-and-rewrite
2. 案例
播放地址：https://cdn-aws-test2.playlet.com/hls/v1/i18n/vip/1071/1/1_4434a0517b48f0b887656eba0ca0ed74.m3u8
文件内容如下：
```
#EXTM3U

#EXT-X-INDEPENDENT-SEGMENTS

#EXT-X-STREAM-INF:BANDWIDTH=416608,AVERAGE-BANDWIDTH=345388,CODECS="avc1.640028,mp4a.40.2",RESOLUTION=480x852,FRAME-RATE=25.000,CLOSED-CAPTIONS=NONE
1_4434a0517b48f0b887656eba0ca0ed74_1451089_0.m3u8
#EXT-X-STREAM-INF:BANDWIDTH=634087,AVERAGE-BANDWIDTH=518518,CODECS="avc1.640032,mp4a.40.2",RESOLUTION=720x1280,FRAME-RATE=25.000,CLOSED-CAPTIONS=NONE
1_4434a0517b48f0b887656eba0ca0ed74_1451089_1.m3u8
#EXT-X-STREAM-INF:BANDWIDTH=995348,AVERAGE-BANDWIDTH=801022,CODECS="avc1.640033,mp4a.40.2",RESOLUTION=1080x1920,FRAME-RATE=25.000,CLOSED-CAPTIONS=NONE
1_4434a0517b48f0b887656eba0ca0ed74_1451089_2.m3u8

```
要求：将上面的m3u8内容进行识别，归纳到一个类，最好是完整的M3U8类识别
例如：
https://cdn-aws2.playlet.com/hls/v1/i18n/vip/1089/1/1_0f3c774a014fae7631c5ec79f4ec3c8d_1451089_1.m3u8

子流文件内容：
```
#EXTM3U
#EXT-X-VERSION:6
#EXT-X-TARGETDURATION:10
#EXT-X-PLAYLIST-TYPE:VOD
#EXT-X-KEY:METHOD=AES-128,URI="https://api2-test.playletonline.com/open/theater/hlsVerify",IV=0x2BD3D66274639C642FF8A9C921A36B25,KEYFORMAT="identity"
#EXTINF:3.000,
1_4434a0517b48f0b887656eba0ca0ed74_1451089_0_1.ts
#EXTINF:3.000,
1_4434a0517b48f0b887656eba0ca0ed74_1451089_0_2.ts
#EXTINF:3.000,
1_4434a0517b48f0b887656eba0ca0ed74_1451089_0_3.ts
#EXTINF:10.000,
1_4434a0517b48f0b887656eba0ca0ed74_1451089_0_4.ts
#EXTINF:5.000,
1_4434a0517b48f0b887656eba0ca0ed74_1451089_0_5.ts
#EXTINF:5.000,
1_4434a0517b48f0b887656eba0ca0ed74_1451089_0_6.ts
#EXTINF:5.000,
1_4434a0517b48f0b887656eba0ca0ed74_1451089_0_7.ts
#EXT-X-ENDLIST

```
可以获取到密钥地址：URI="https://api2.playlet.com/open/theater/hlsVerify"
需要在播放器请求这个URI密钥地址的时候拼接上授权参数
测试的授权参数：encrypt_token=1756899414.1071.1.cda114669ab49995d5dac2347512e4e8
完整的解密地址：https://api2.playlet.com/open/theater/hlsVerify?encrypt_token=1756899414.1071.1.cda114669ab49995d5dac2347512e4e8
播放器获取到密钥之后会自动去解密并播放视频

## 系统设计要求

### 总体原则
- 所有都是重新设计，不需要考虑任何兼容性，符合设计原则
- 实现完整的M3U8文件缓存策略，提升播放性能
- 所有错误情况最终表现为播放失败
- 保证线程安全，支持多并发请求
- 配置采用静态配置类方式，使用默认参数

### 整体工作流程
1. **播放请求** → 缓存模块检查 → 解析器模块解析 → 播放控制模块选择子流
2. **子流播放** → 缓存检查子流M3U8 → 解析媒体播放列表 → 密钥管理模块处理加密
3. **播放过程** → 持续监控播放状态 → 错误处理 → 状态回调通知

### 核心组件设计

#### 1. M3U8解析器模块
**1.1 主M3U8信息类 (MasterPlaylist)**
- 解析主M3U8文件内容，包含多个子流信息
- 属性包括：版本信息、子流列表、元数据等
- 示例解析内容：
```
#EXTM3U
#EXT-X-INDEPENDENT-SEGMENTS
#EXT-X-STREAM-INF:BANDWIDTH=416608,AVERAGE-BANDWIDTH=345388,CODECS="avc1.640028,mp4a.40.2",RESOLUTION=480x852,FRAME-RATE=25.000,CLOSED-CAPTIONS=NONE
1_4434a0517b48f0b887656eba0ca0ed74_1451089_0.m3u8
```

**1.2 子流信息类 (StreamInfo)**
- 解析EXT-X-STREAM-INF标签的所有属性
- 属性包括：带宽、平均带宽、编解码器、分辨率、帧率、字幕信息、子流URL等
- 提供清晰度等级判断方法

**1.3 媒体播放列表类 (MediaPlaylist)**
- 解析具体的子流M3U8文件内容
- 解析标签包括：EXT-X-VERSION、EXT-X-TARGETDURATION、EXT-X-PLAYLIST-TYPE、EXT-X-KEY、EXTINF、EXT-X-ENDLIST等
- 属性包括：版本号、目标时长、播放列表类型、加密信息、TS片段列表等
- 示例解析内容：
```
#EXTM3U
#EXT-X-VERSION:6
#EXT-X-TARGETDURATION:10
#EXT-X-PLAYLIST-TYPE:VOD
#EXT-X-KEY:METHOD=AES-128,URI="https://api2-test.playletonline.com/open/theater/hlsVerify",IV=0x2BD3D66274639C642FF8A9C921A36B25,KEYFORMAT="identity"
#EXTINF:3.000,
1_4434a0517b48f0b887656eba0ca0ed74_1451089_0_1.ts
```

**1.4 TS片段信息类 (SegmentInfo)**
- 解析EXTINF标签信息
- 属性包括：时长、URL、序号等

**1.5 加密信息类 (EncryptionInfo)**
- 解析EXT-X-KEY标签信息
- 属性包括：加密方法、密钥URI、IV值、密钥格式等

#### 2. 播放控制模块
**2.1 播放器代理接口**
- 子流选择策略：根据用户设置的清晰度偏好（标清、高清、超清等）选择合适的子流
- 播放状态变化通知
- 解析进度回调

**2.2 清晰度选择器**
- 根据StreamInfo提供的分辨率和带宽信息进行分级
- 清晰度等级标准：
  - 标清：分辨率 ≤ 480p，带宽 ≤ 500kbps
  - 高清：分辨率 480p-720p，带宽 500kbps-1Mbps  
  - 超清：分辨率 720p-1080p，带宽 1Mbps-2Mbps
  - 蓝光：分辨率 ≥ 1080p，带宽 ≥ 2Mbps
- 支持用户手动选择清晰度
- 通过代理模式通知播放器最终选择的子流

#### 3. M3U8文件缓存模块
**3.1 缓存配置类 (CacheConfig)**
- 静态配置类，包含所有缓存相关的默认参数
- 缓存目录路径（默认：Documents/M3U8Cache/）
- 最大文件数限制（默认：1000）
- 最大内存占用限制（默认：20M）
- 缓存有效期设置（默认：60分钟）
- 支持运行时获取和修改配置参数

**3.2 缓存管理器 (CacheManager)**
- 磁盘缓存实现，存储下载的原始M3U8文件
- 缓存键值生成：MD5(URL + encrypt_token)，其中encrypt_token为授权参数
- LRU淘汰策略：优先淘汰最久未访问的文件，使用访问时间戳记录
- 缓存文件的读取、写入、删除操作，保证线程安全
- 缓存统计信息（文件数量、占用空间、命中率等）

**3.3 缓存策略执行器**
- 先查本地缓存，不存在则请求网络
- 缓存有效期检查和过期文件清理
- 缓存空间管理和LRU淘汰执行

#### 4. 密钥管理模块
**4.1 授权配置类**
- 外部参数配置密钥授权信息
- 支持动态获取授权参数（encrypt_token等）
- 示例：完整密钥请求地址拼接逻辑

**4.2 密钥请求处理器**
- 拦截播放器的密钥请求
- 在密钥URI后拼接授权参数
- 处理密钥获取的网络请求

#### 5. 错误处理策略
**5.1 网络请求失败**
- M3U8文件下载失败 → 播放失败
- 密钥获取失败 → 播放失败
- TS片段下载失败 → 播放失败

**5.2 解析失败**
- M3U8格式解析失败 → 播放失败
- 密钥信息解析失败 → 播放失败

**5.3 缓存相关错误**
- 缓存目录创建失败 → 降级到无缓存模式
- 缓存文件读取失败 → 重新请求网络
- 缓存空间不足 → 自动清理过期文件

#### 6. 接口设计
**6.1 解析进度回调**
- 主M3U8解析完成通知
- 子流M3U8解析完成通知
- 密钥获取进度通知

**6.2 播放状态代理**
- 子流选择确认回调
- 播放器状态变化通知
- 错误状态通知

**6.3 缓存状态回调**
- 缓存命中/未命中通知
- 缓存文件写入完成通知
- 缓存清理进度通知
- 缓存统计信息回调

### 实现细节要求
1. 所有解析器类要独立设计，职责单一
2. 数据模型类和解析器类分离
3. 代理模式实现松耦合的组件通信
4. 统一的错误处理机制
5. 清晰的接口设计支持扩展性
6. 缓存模块与解析模块解耦，支持独立测试
7. LRU算法实现高效的缓存淘汰机制
8. 缓存配置采用静态配置类方式，使用默认参数
9. 所有网络操作和缓存操作保证线程安全
10. 支持多并发请求，避免重复下载同一M3U8文件

### 配置类示例 (CacheConfig)
```objc
@interface CacheConfig : NSObject
+ (instancetype)sharedConfig;
@property (nonatomic, readonly) NSString *cacheDirectory;      // 默认: Documents/M3U8Cache
@property (nonatomic, readonly) NSInteger maxFileCount;        // 默认: 1000
@property (nonatomic, readonly) NSInteger maxMemorySize;       // 默认: 20 (MB)
@property (nonatomic, readonly) NSInteger cacheExpirationMinutes; // 默认: 60
@end
```